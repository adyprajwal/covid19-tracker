{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","iamge","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca20f721.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3a9Z5\",\"card\":\"Cards_card__2Qw3K\",\"infected\":\"Cards_infected__1qJOm\",\"recovered\":\"Cards_recovered__2Lk-E\",\"deaths\":\"Cards_deaths__uirF4\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\tif (!confirmed) {\r\n\t\treturn \"Loading...\";\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<Grid container spacing={3} justify=\"center\">\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\tcomponent={Card}\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tmd={3}\r\n\t\t\t\t\tclassName={cx(styles.card, styles.infected)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tInfected\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp\r\n\t\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\t\tend={confirmed.value}\r\n\t\t\t\t\t\t\t\tduration={2.5}\r\n\t\t\t\t\t\t\t\tseparator=\",\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">\r\n\t\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">\r\n\t\t\t\t\t\t\tNumber of active cases of COVID-19\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\tcomponent={Card}\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tmd={3}\r\n\t\t\t\t\tclassName={cx(styles.card, styles.recovered)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tRecovered\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp\r\n\t\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\t\tend={recovered.value}\r\n\t\t\t\t\t\t\t\tduration={2.5}\r\n\t\t\t\t\t\t\t\tseparator=\",\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">\r\n\t\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">\r\n\t\t\t\t\t\t\tNumber of recoveries from COVID-19\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\titem\r\n\t\t\t\t\tcomponent={Card}\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tmd={3}\r\n\t\t\t\t\tclassName={cx(styles.card, styles.deaths)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\t\tDeaths\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t<CountUp\r\n\t\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\t\tend={deaths.value}\r\n\t\t\t\t\t\t\t\tduration={2.5}\r\n\t\t\t\t\t\t\t\tseparator=\",\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">\r\n\t\t\t\t\t\t\t{new Date(lastUpdate).toDateString()}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">\r\n\t\t\t\t\t\t\tNumber of deaths caused by COVID-19\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n\tlet changeableUrl = url;\r\n\tif (country) {\r\n\t\tchangeableUrl = `${url}/countries/${country}`;\r\n\t}\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tdata: { confirmed, recovered, deaths, lastUpdate },\r\n\t\t} = await axios.get(changeableUrl);\r\n\t\tconst modifiedData = {\r\n\t\t\tconfirmed,\r\n\t\t\trecovered,\r\n\t\t\tdeaths,\r\n\t\t\tlastUpdate,\r\n\t\t};\r\n\t\treturn modifiedData;\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`${url}/daily`);\r\n\t\tconst modifiedData = data.map((dailyData) => ({\r\n\t\t\tconfirmed: dailyData.confirmed.total,\r\n\t\t\tdeaths: dailyData.deaths.total,\r\n\t\t\tdate: dailyData.reportDate,\r\n\t\t}));\r\n\t\treturn modifiedData;\r\n\t} catch (error) {}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tdata: { countries },\r\n\t\t} = await axios.get(`${url}/countries`);\r\n\t\treturn countries.map((country) => country.name);\r\n\t} catch (error) {}\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n\tconst [dailyData, setDailyData] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetDailyData(await fetchDailyData());\r\n\t\t};\r\n\t\tfetchAPI();\r\n\t}, []);\r\n\tconst lineChart =\r\n\t\tdailyData.length != 0 ? (\r\n\t\t\t<Line\r\n\t\t\t\tdata={{\r\n\t\t\t\t\tlabels: dailyData.map(({ date }) => date),\r\n\t\t\t\t\tdatasets: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed),\r\n\t\t\t\t\t\t\tlabel: \"Infected\",\r\n\t\t\t\t\t\t\tborderColor: \"#3333ff\",\r\n\t\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths),\r\n\t\t\t\t\t\t\tlabel: \"Deaths\",\r\n\t\t\t\t\t\t\tborderColor: \"red\",\r\n\t\t\t\t\t\t\tbackgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n\t\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t) : null;\r\n\r\n\tconst barChart = confirmed ? (\r\n\t\t<Bar\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: \"People\",\r\n\t\t\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\t\t\"rgba(0, 0, 255, 0.5)\",\r\n\t\t\t\t\t\t\t\"rgba(0, 255, 0, 0.5)\",\r\n\t\t\t\t\t\t\t\"rgba(255, 0, 0, 0.5)\",\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tdata: [confirmed.value, recovered.value, deaths.value],\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t\toptions={{\r\n\t\t\t\tlegend: { display: false },\r\n\t\t\t\ttitle: { display: true, text: `Current state in ${country}` },\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n\treturn (\r\n\t\t<div className={styles.container}>{country ? barChart : lineChart}</div>\r\n\t);\r\n};\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"../../api\";\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\tconst [fetchedCountries, setFetchedCountries] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetFetchedCountries(await fetchCountries());\r\n\t\t};\r\n\t\tfetchAPI();\r\n\t}, [setFetchedCountries]);\r\n\tconsole.log(\"Countries\", fetchedCountries);\r\n\treturn (\r\n\t\t<FormControl className={styles.formControl}>\r\n\t\t\t<NativeSelect\r\n\t\t\t\tdefaultValue=\"\"\r\n\t\t\t\tonChange={(e) => handleCountryChange(e.target.value)}\r\n\t\t\t>\r\n\t\t\t\t<option value=\"\">Global</option>\r\n\t\t\t\t{fetchedCountries.map((country, i) => (\r\n\t\t\t\t\t<option key={i} value={country}>\r\n\t\t\t\t\t\t{country}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t))}\r\n\t\t\t</NativeSelect>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\nexport default CountryPicker;\r\n","import React from \"react\";\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\nimport coronaImage from \"./images/image.png\";\n\nclass App extends React.Component {\n\tstate = {\n\t\tdata: {},\n\t\tcountry: \"\",\n\t};\n\tasync componentDidMount() {\n\t\tconst fetchedData = await fetchData();\n\n\t\tthis.setState({ data: fetchedData });\n\t}\n\thandleCountryChange = async (country) => {\n\t\tconst fetchedData = await fetchData(country);\n\t\tthis.setState({ data: fetchedData, country: country });\n\t};\n\trender() {\n\t\tconst { data, country } = this.state;\n\t\treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t\t<img\n\t\t\t\t\tclassName={styles.iamge}\n\t\t\t\t\tsrc={coronaImage}\n\t\t\t\t\talt=\"COVID-19\"\n\t\t\t\t/>\n\t\t\t\t<Cards data={data} />\n\t\t\t\t<CountryPicker handleCountryChange={this.handleCountryChange} />\n\t\t\t\t<Chart data={data} country={country} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2LGPI\",\"image\":\"App_image__16z6q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1IW_Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__in6ry\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}